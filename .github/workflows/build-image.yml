name: Build
on:
  push:
    branches:
      - main

jobs:
  build-and-push-container:
    if: github.event_name != 'pull_request' && contains(github.ref, 'actions') != 'true'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2.4.0
      - name: Create VARS
        id: vars
        run: |
          echo "::set-output name=branch::${GITHUB_REF//refs\/heads\//}"
          echo "::set-output name=username::$(echo ${GITHUB_REPOSITORY} | cut -d/ -f1 | tr '[:upper:]' '[:lower:]')"
          echo "::set-output name=source::${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/tree/${GITHUB_REF//refs\/heads\//}"
          echo "::set-output name=url::${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/blob/master/README.md"
          echo "::set-output name=tag::$(echo ${GITHUB_REPOSITORY} | tr '[:upper:]' '[:lower:]'):${GITHUB_SHA}"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ steps.vars.outputs.username }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
          version: latest
          driver-opts: image=moby/buildkit:master

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          platforms: ${{ steps.vars.outputs.platform }}
          file: Dockerfile
          tags: |
            ghcr.io/${{ steps.vars.outputs.tag }}
          labels: |
            org.opencontainers.image.source=${{ steps.vars.outputs.source }}
            org.opencontainers.image.url=${{ steps.vars.outputs.url }}

      - name: Create manifests for GitHub Container Registry
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled
        run: |
          IMAGE=ghcr.io/$(echo ${GITHUB_REPOSITORY} | tr '[:upper:]' '[:lower:]')
          SOURCE=${IMAGE}:${GITHUB_SHA}
          docker manifest create ${IMAGE}:${{ steps.vars.outputs.branch }}    --amend ${SOURCE} && docker manifest push ${IMAGE}:${{ steps.vars.outputs.branch }}
          if [[ ${GITHUB_REF//refs\/heads\//} == main ]]; then
            docker manifest create ${IMAGE}:latest                            --amend ${SOURCE} && docker manifest push ${IMAGE}:latest
          fi
